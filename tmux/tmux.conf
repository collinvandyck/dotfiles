# vim:syntax=tmux

set-option -g           detach-on-destroy on
set-option -g           history-limit 100000
set-option -g           history-file ~/.tmux.history
set-option -gw          window-status-separator ""
set-option -g           default-shell /bin/zsh
set-option -g           status-position top
set-option -g           display-time 1250
set-option -g           base-index 0
set-option -g           renumber-windows on
set-option -g           repeat-time 1000
set-option -g           mouse on
set-option -s           set-clipboard on # should be on or external
set-option -gw          mode-keys vi
set-option -gs          escape-time 10  # nvim
set-option -g           focus-events on # nvim
set-option -g           default-terminal "xterm-256color"
set-option -sa          terminal-features ',xterm-256color:RGB'
set-option -g           status-interval 5
set-option -g           automatic-rename off
set-option -g           automatic-rename-format '#{b:pane_current_path}'

set-hook -g client-detached { run-shell ~/.dotfiles/tmux/hooks/detach.sh }

bind-key -n C-k         {clear-history; send C-k}
bind-key -n M-n         new-window -a -c '#{pane_current_path}'
bind-key -n M-N         new-window

# launch
bind-key -n M-d         run-shell '~/.dotfiles/bin/launch-tmux dotfiles'
bind-key -n M-g         run-shell '~/.dotfiles/bin/launch-tmux gpterm'
bind-key -n M-h         new-window -n .htop htop

# leader
bind-key -n M-,         switch-client -T leader
bind-key -T leader c    new-window

# misc
bind-key    r           { source-file ~/.tmux.conf; display-message reloaded }

# sessions
bind-key -n M-O         switch-client -l
bind-key    w           choose-tree -Z
bind-key -n M-w         choose-tree -Z
bind-key    S           command-prompt -p session: 'new-session -A -s %%'

# windows
bind-key    x           kill-window
bind-key -n M-j         next-window
bind-key -n M-k         previous-window
bind-key -n M-o         last-window
bind-key    o           last-window
bind-key -n M-i         { swap-window -t -1; previous-window }
bind-key -n M-u         { swap-window -t +1; next-window }

# panes
bind-key -n M-5         split-pane -h -c "#{pane_current_path}"
bind-key -n M-\'        split-pane -c "#{pane_current_path}"
bind-key -n M-L         select-pane -R
bind-key -n M-H         select-pane -L
bind-key -n M-K         select-pane -U
bind-key -n M-J         select-pane -D
bind-key -r J           resize-pane -D 2
bind-key -r K           resize-pane -U 2
bind-key -r H           resize-pane -L 2
bind-key -r L           resize-pane -R 2
bind-key -n M-z         resize-pane -Z
bind-key -n M-\;        last-pane


# switches to the previous session and then kills the one you were on 
bind-key    X           { run-shell 'tmux switch-client -l\\;'; run-shell 'tmux kill-session -t "#S";' }


# tree mode bindings
bind-key -T root o      if -F "#{==:#{pane_mode},tree-mode}" { send Enter } { send o }

# popup session 
bind-key -n M-p         if-shell -F '#{==:#{session_name},popup}' {
                            detach-client
                        } {
                            display-popup -d "#{pane_current_path}" -xC -yC -w 90% -h 90% -E 'tmux attach-session -t popup || tmux new-session -s popup'
                        }


tmux_commands_with_legacy_scroll='nano less more man git bat'
bind-key -T root WheelUpPane \
	if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
		'send -Mt=' \
		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
			"send -t= Up" "copy-mode -et="'
bind-key -T root WheelDownPane \
	if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
		'send -Mt=' \
		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
			"send -t= Down" "send -Mt="'


#############################################################
# External loading
#############################################################

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'erikw/tmux-powerline'
set -g @plugin 'laktak/extrakto#python-posix'

run '~/.tmux/plugins/tpm/tpm'
