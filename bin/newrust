#!/usr/bin/env bash

set -e

name=${1}
dir=~/code

usage() {
	echo "usage: $(basename $0) [name]"
	exit 1
}

if [ "$name" = "" ]; then
	name=wip
	dir=$(mktemp -d)
fi

cd $dir

if [ -d $name ]; then
	echo "error: $name already exists"
	exit 1
fi

cargo new $name
cd $name
cargo add \
	thiserror \
	anyhow \
	rand \
	tokio \
	tracing \
	tracing-subscriber \
	--features tracing-subscriber/env-filter \
	--features tokio/full


cat <<eos > rustfmt.toml
# https://github.com/rust-lang/rustfmt/blob/master/Configurations.md

group_imports = "One"
imports_granularity = "Crate"
use_field_init_shorthand = true
use_small_heuristics = "Max"
wrap_comments = false
eos

cat <<eos > Makefile
run:
	cargo run

release:
	cargo build --release

test:
	cargo test

eos

cat <<eos > Taskfile.yml
version: '3'
vars:
tasks:
  test:
    aliases: ['t']
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - cargo test
    silent: true
  default:
    aliases: ['r']
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - cargo run
    silent: true
eos

cat <<eos > src/main.rs
use tracing::*;

#[tokio::main]
async fn main() {
    tracing_subscriber::fmt().init();
    info!("Hello world!");
}
eos

nvim src/main.rs
exec zsh
